name: Loom CI

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]
  workflow_dispatch: {}

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    name: Validate • Test • Smoke (py${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.13", "3.11" ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          check-latest: true

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install jsonschema

      - name: Sanity tree
        run: |
          pwd
          echo "--- root ---"; ls -la || true
          echo "--- agents/loomweaver ---"; ls -la agents/loomweaver || true
          echo "--- scripts ---"; ls -la scripts || true
          echo "--- src ---"; ls -la src || true

      - name: Python version
        run: python -V

      # Optional smoke build from outline (does not touch canonical AST)
      - name: Compile (temp bundle)
        run: |
          python -m src.compiler \
            "agents/loomweaver/loomweaver.outline.md" \
            "agents/loomweaver/loomweaver.modules.ast.build.json"

      # Validate the committed, canonical AST + program + caps
      - name: Validate (strict)
        run: |
          python "scripts/loom.cli.py" validate --strict

      # Run loomweaver module tests with strict exit policy
      - name: Tests (strict)
        run: |
          python "scripts/loom.cli.py" test --strict

      # Capability-enforced smoke run of a simple module
      - name: Enforced VM smoke
        run: |
          python "scripts/loom.cli.py" run --module "Greeting Module" name=Alice --enforce-capabilities
