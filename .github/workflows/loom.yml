name: Loom CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

permissions:
  contents: read

jobs:
  test:
    name: Tests (py${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.13", "3.11"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          check-latest: true

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install jsonschema
          fi

      - name: Compile loomweaver
        run: |
          python scripts/loom.cli.py compile

      - name: Validate program/modules (errors only)
        run: |
          python scripts/loom.cli.py validate --strict

      - name: Run tests (strict, receipts diff against goldens)
        run: |
          python scripts/loom.cli.py test --strict

  enforce-capabilities:
    name: Capability Enforcement Smoke (py3.13)
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          check-latest: true

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install jsonschema
          fi

      - name: Compile loomweaver
        run: |
          python scripts/loom.cli.py compile

      - name: Validate (errors only)
        run: |
          python scripts/loom.cli.py validate --strict

      # Pick any simple module; adjust inputs as needed.
      - name: Enforced VM smoke
        run: |
          python scripts/loom.cli.py run "Greeting Module" name=Alice --enforce-capabilities
name: Loom CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read

jobs:
  test:
    name: Tests (py${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.13", "3.11" ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          check-latest: true

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install jsonschema
          fi

      - name: Sanity: list repo tree (helps debug paths)
        run: |
          ls -la
          echo "---"
          ls -la agents/loomweaver || true
          echo "---"
          ls -la scripts || true
          echo "---"
          ls -la src || true

      - name: Compile (skip if no compiler)
        run: |
          if [ -f src/compiler.py ]; then
            echo "Compiler present: running compile"
            python scripts/loom.cli.py compile
          else
            echo "No src/compiler.py found; skipping compile"
          fi

      - name: Validate (errors only)
        run: |
          python scripts/loom.cli.py validate --strict

      - name: Tests (strict; compare receipts to goldens if present)
        run: |
          python scripts/loom.cli.py test --strict

  enforce-capabilities:
    name: Capability Enforcement Smoke (py3.13)
    runs-on: ubuntu-latest
    needs: [ test ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          check-latest: true

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install jsonschema
          fi

      - name: Compile (skip if no compiler)
        run: |
          if [ -f src/compiler.py ]; then
            python scripts/loom.cli.py compile
          else
            echo "No compiler; skipping"
          fi

      - name: Validate
        run: |
          python scripts/loom.cli.py validate --strict

      - name: Enforced VM smoke
        run: |
          # Use a simple module that exists in your AST bundle
          python scripts/loom.cli.py run "Greeting Module" name=Alice --enforce-capabilities
